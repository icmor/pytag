* PyTag
A simple mp3 tag editor written in python
** Requirements
- Python 3
- PyGObject
- mutagen (mp3 tag management)
** Run
#+begin_src bash
python main.py
#+end_src
** Installation
Install	the required packages with pip:
#+begin_src bash
pip install -r requirements.txt
#+end_src

PyGObject requires gobject-introspection as a build dependency. PyGObject is most likely already installed on your system in which case you can check by running:
#+begin_src bash
python -c "import gi"
#+end_src

If you want to run the program in a virtual environment but use the system-wide PyGObject you can create a virtualenv with access to system-wide packages like so:
#+begin_src bash
python -m venv --system-site-packages .env
#+end_src
and then just install the remaining packages.
** Filtering
JSON! Just write a JSON dictionary, any keys you add act like conditions and you can add multiple values for a single key with a list. Valid keys are: "album", "genre", "performer", "title", "track", "year". Example:
Song with title "Power" by either "Molotov" or "Kanye West"
{"title": "Power", "performer": ["Molotov", "Kanye West"]}
** Plan
- [X] Create and setup database
- [X] Method for adding songs to the database (handle duplicates)
- [X] Triggers for deletion of albums/performers
- [X] Basic Gtk.TreeView, get list from db
- [X] CellRendererText callback for db edits
- [X] Define language for filtering ("searching")
